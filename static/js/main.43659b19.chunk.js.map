{"version":3,"sources":["Components/Carousel/Carousel.js","Actions/index.js","Components/SlidesSelector/SlidesSelector.js","Components/Modal/Modal.js","Components/History/History.js","App.js","serviceWorker.js","Reducers/index.js","Components/Login/Login.js","index.js"],"names":["Carousel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeSlide","e","n","showSlides","currentSlide","i","slides","document","getElementsByClassName","length","style","display","_this2","isLoggedIn","window","location","hash","numberOfSlides","push","react_default","a","createElement","key","className","type","onClick","aria-hidden","Component","connect","state","carousel","changeNumberOfSlides","logIn","toggleHistory","NUMBERS","SlidesSelector","handleSelect","num","console","log","dispatch","onChange","target","value","map","number","index","modalRoot","getElementById","Modal","el","classList","add","appendChild","removeChild","ReactDOM","createPortal","children","React","History","selectedSlides","App","Fragment","Components_SlidesSelector_SlidesSelector","Components_Carousel_Carousel","showHistory","Components_Modal_Modal","Components_History_History","Boolean","hostname","match","initialState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","concat","toConsumableArray","Login","preventDefault","elements","username","user","password","pwd","warn","setState","error","onSubmit","name","required","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","render","es","react_router_dom","react_router","exact","path","component","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43659b19.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './carousel.scss';\n\nclass Carousel extends Component {\n    constructor(props) {\n        super(props);\n        this.currentSlide = 1\n    }\n\n    changeSlide = (e, n) => {\n        this.showSlides(e, this.currentSlide += n);\n    }\n\n    showSlides = (e, n) => {\n        var i;\n        var slides = document.getElementsByClassName(\"slide\");\n\n        if (n > slides.length) { this.currentSlide = 1 }\n        if (n < 1) { this.currentSlide = slides.length }\n        for (i = 0; i < slides.length; i++) {\n            slides[i].style.display = \"none\";\n        }\n\n        slides[this.currentSlide - 1].style.display = \"flex\";\n    }\n\n    componentDidMount() {\n        this.showSlides(null, this.currentSlide);\n    }\n\n    componentDidUpdate() {\n        this.showSlides(null, this.currentSlide);\n    }\n\n    render() {\n        if(!this.props.isLoggedIn) {\n            window.location.hash=\"/\"\n        }\n        \n        let slides = [];\n        for(let i=0; i<this.props.numberOfSlides; i++) {\n            slides.push(<div key={i} className=\"slide\">\n                            <div className=\"slide-title\">{i + 1}</div>\n                        </div>)\n        }\n\n        return (\n            <div className=\"slide-container\">\n                <button className=\"carousel-btn carousel-btn--left\" type=\"button\" onClick={(e) => {this.changeSlide(e, -1)}}>\n                    <i className=\"fa fa-caret-left\" aria-hidden=\"true\"></i>\n                </button>\n                {\n                    slides   \n                }\n                <button className=\"carousel-btn carousel-btn--right\" type=\"button\" onClick={(e) => {this.changeSlide(e, 1)}}>\n                    <i className=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\n                </button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    numberOfSlides: state.carousel.numberOfSlides,\n    isLoggedIn: state.carousel.isLoggedIn\n})\n\nexport default connect(mapStateToProps)(Carousel);","export const CHANGE_NUMBER_OF_SLIDES = \"CHANGE_NUMBER_OF_SLIDES\";\nexport const LOG_IN = \"LOG_IN\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const TOGGLE_HISTORY = \"TOGGLE_HISTORY\"\n\nexport const changeNumberOfSlides = (numberOfSlides) => ({\n    type: CHANGE_NUMBER_OF_SLIDES,\n    numberOfSlides\n});\n\nexport const logIn = () => ({\n    type: LOG_IN,\n});\n\nexport const logOut = () => ({\n    type: LOG_OUT,\n});\n\nexport const toggleHistory = () => ({\n    type: TOGGLE_HISTORY,\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {changeNumberOfSlides} from '../../Actions';\nimport './slide-selector.scss';\n\nconst NUMBERS = [\"ONE\", \"TWO\", \"THREE\", \"FOUR\", \"FIVE\", \"SIX\", \"SEVEN\", \"EIGHT\", \"NINE\", \"TEN\", \n                \"ELEVEN\", \"TWELEVE\", \"THIRTEEN\", \"FOURTEEN\", \"FIFTEEN\", \"SIXTEEN\", \"SEVENTEEN\",\n                \"EIGHTEEN\", \"NINETEEN\", \"TWENTY\"];\n\nclass SlidesSelector extends Component {\n\n\n    handleSelect = (num) => {\n        console.log(num);\n        this.props.dispatch(changeNumberOfSlides(num))\n    }\n\n    render() {\n        return (\n            <div className=\"container slide-selector\">\n                <p className=\"slide-selector-title\">Select a number between 1 to 20</p>\n                <div className=\"slide-selector-input\">\n                    <select className=\"select-input\" onChange={(e) => { this.handleSelect(e.target.value) }}>\n                        {\n                            NUMBERS.map((number, index) => {\n                                return <option key={index} value={index + 1}>{number}</option>\n                            })\n                        }\n                    </select>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(SlidesSelector);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst modalRoot = document.getElementById('modal-root');\n\nclass Modal extends React.Component {\n    constructor(props) {\n      super(props);\n      this.el = document.createElement('div');\n      this.el.classList.add(\"modal\")\n    }\n  \n    componentDidMount() {\n      modalRoot.appendChild(this.el);\n    }\n  \n    componentWillUnmount() {\n      modalRoot.removeChild(this.el);\n    }\n  \n    render() {\n      return ReactDOM.createPortal(\n        this.props.children,\n        this.el,\n      );\n    }\n  }\n\n  export default Modal;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './history.scss';\n\nclass History extends Component {\n    render() {\n        let { selectedSlides } = this.props;\n        return (\n            <div className=\"container history\">\n                <div className=\"history-title\">History\n                    {/* <button onClick={this.props.toggleHistory}>X</button> */}\n                </div>\n                <div className=\"history-selected-slides\">\n                    {\n                        selectedSlides.map((number, index) => (\n                            <span className=\"slides\" key={index}>{number}</span>\n                        ))\n                    }\n                </div>\n                <div className=\"btn-container\"><button className=\"btn\" onClick={this.props.toggleHistory}>Okay</button></div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    selectedSlides: state.carousel.selectedSlides\n})\n\nexport default connect(mapStateToProps)(History);","import React from 'react';\nimport Carousel from '../src/Components/Carousel/Carousel'\nimport SlidesSelector from './Components/SlidesSelector/SlidesSelector';\nimport { connect } from 'react-redux';\nimport { toggleHistory } from './Actions';\nimport Modal from './Components/Modal/Modal';\nimport History from './Components/History/History'\nimport './App.scss';\n\nclass App extends React.Component {\n\n  toggleHistory = () => {\n    this.props.dispatch(toggleHistory())\n  }\n\n  render() {\n    return (\n      <>\n        <SlidesSelector></SlidesSelector>\n        <Carousel></Carousel>\n        <div className=\"finish\">\n          <button className=\"btn\"type=\"button\" onClick={this.toggleHistory}>Finish</button>\n        </div>\n        {\n          this.props.showHistory &&\n          <Modal>\n            <History toggleHistory={this.toggleHistory}></History>\n          </Modal>\n        }\n      </>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  showHistory: state.carousel.showHistory\n})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { CHANGE_NUMBER_OF_SLIDES, LOG_IN, LOG_OUT, TOGGLE_HISTORY } from '../Actions';\nimport { combineReducers } from 'redux';\n\nlet initialState = {\n    numberOfSlides: 1,\n    selectedSlides: [1],\n    isLoggedIn: false,\n    showHistory: false\n}\n\nlet carousel = (state = initialState, action) => {\n    switch(action.type) {\n        case CHANGE_NUMBER_OF_SLIDES:\n            console.log(state);\n            return {\n                ...state,\n                numberOfSlides: +action.numberOfSlides,\n                selectedSlides: [\n                    ...state.selectedSlides, \n                    +action.numberOfSlides\n                ]\n            }\n        case LOG_IN:\n            return {\n                ...state,\n                isLoggedIn: true\n            }\n        case LOG_OUT:\n            return {\n                ...state,\n                isLoggedIn: false\n            }\n        case TOGGLE_HISTORY: \n            return {\n                ...state,\n                showHistory: !state.showHistory\n            }\n        default: \n            return state;\n    }\n\n}\n\nconst rootReducer = combineReducers({\n    carousel\n})\n\nexport default rootReducer;","import React , { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logIn } from '../../Actions';\nimport './login.scss';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: \"\"\n        }\n    }\n\n    logIn = (e) => {\n        e.preventDefault();\n        console.log(e.target.elements);\n        let username = e.target.elements.user.value;\n        let password = e.target.elements.pwd.value;\n        if(username === \"shaadi\" && password === \"123\") {\n            this.props.dispatch(logIn());\n            window.location.hash = \"/carousel\"\n        }else {\n            console.warn(\"Error\");\n            this.setState({error: \"Invalid Credentials!\"})\n        }\n    }\n\n    render() {\n        if(this.props.isLoggedIn) {\n            window.location.hash = \"/carousel\"\n        }\n        \n        return (\n            <div className=\"container login\">\n                <div className=\"login-title\">CARAOUSEL</div>\n                <div className=\"login-form\">\n                    <form onSubmit={(e) => {this.logIn(e)}}>\n                        <div className=\"input-container\">\n                            <label className=\"input-label\">Username</label>\n                            <input className=\"input\" name=\"user\" type=\"text\" required></input>\n                        </div>\n                        <div className=\"input-container\">\n                            <label className=\"input-label\">Password</label>\n                            <input className=\"input\" name=\"pwd\" type=\"password\" required></input>\n                        </div>\n                        <div className=\"btn-container\">\n                            <button className=\"btn\" type=\"submit\" >Login</button>\n                        </div>\n                    </form>\n                </div>\n                {\n                    this.state.error && \n                    <div className=\"login-error\">\n                        { this.state.error }\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isLoggedIn: state.carousel.isLoggedIn\n})\n\nexport default connect(mapStateToProps)(Login);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport reducer from './Reducers';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Login from './Components/Login/Login'\nimport '../src/styles/common.scss';\n\nconst store = createStore(reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Route exact path=\"/\" component={Login}></Route>\n            <Route exact path=\"/carousel\" component={App}></Route>\n        </Router>\n        {/* <App /> */}\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}